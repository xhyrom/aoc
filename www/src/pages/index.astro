---
import { getCollection } from "astro:content";
import { activeAocYear, yearsBetween } from "../lib/common.ts";
import Layout from "../layouts/Layout.astro";
import Container from "../components/Container.astro";

const series = await Promise.all(
  yearsBetween(2015).map(async (year) => {
    // @ts-expect-error fine
    const collection = await getCollection(`lb-${year}`);
    if (collection.length < 25) {
      for (let i = collection.length; i < 25; i++) {
        // @ts-expect-error fine
        collection.push({
          data: Array.from({ length: 100 }, (_, __) => ({
            time: {
              hours: null,
              minutes: null,
              seconds: null,
            },
          })),
        });
      }
    }

    return {
      name: year,
      data: collection.map((day) =>
        day.data[99].time.hours == null
          ? null
          : day.data[99].time.hours * 60 * 60 +
            day.data[99].time.minutes * 60 +
            day.data[99].time.seconds,
      ),
    };
  }),
);

const seriesEncoded = btoa(JSON.stringify(series));

const stats = (await getCollection("stats")).map((data) => ({
  name: data.id,
  data: data.data,
}));

const statsEncoded = btoa(JSON.stringify(stats));
---

<Layout>
  <Container class="pt-4 pb-4">
    <aoc-line-chart data-series={seriesEncoded} data-id="line-chart"
    ></aoc-line-chart>
    <aoc-heat-map-chart data-series={seriesEncoded} data-id="heat-chart"
    ></aoc-heat-map-chart>
    <aoc-bar-chart data-data={statsEncoded} data-id="bar-chart"></aoc-bar-chart>

    <main>
      <div>
        <p class="text-2xl font-bold">Leaderboard times</p>
        <p>
          Unofficial leaderboard times for the <a
            class="text-yellow-600"
            href="https://adventofcode.com">Advent of Code</a
          > challenges.
        </p>
      </div>

      <section>
        <div id="line-chart"></div>
      </section>

      <section>
        <div id="heat-chart"></div>
      </section>

      <section>
        <div>
          <p class="text-2xl font-bold">Stars</p>
          <p>
            You can see stars directly on the <a
              class="text-yellow-600"
              href="https://adventofcode.com">Advent of Code</a
            >. Stars are updated at 00:00 UTC and 8:00 UTC.
          </p>
          <p>
            Showing stars for the year <span id="year" class="text-yellow-600"
              >{activeAocYear()}</span
            >
          </p>

          <div id="bar-chart"></div>

          <div class="flex justify-center mt-4">
            <div class="flex flex-wrap justify-center">
              {
                yearsBetween(2015).map((year) => (
                  <button
                    class="bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded-full mx-2 my-1"
                    onclick="document.querySelector('aoc-bar-chart').setAttribute('data-year', this.dataset.year); document.querySelector('#year').innerText = this.dataset.year;"
                    data-year={year}
                  >
                    {year}
                  </button>
                ))
              }
            </div>
          </div>
        </div>

        <script src="../lib/line_chart.ts"></script>
        <script src="../lib/heat_map_chart.ts"></script>
        <script src="../lib/bar_chart.ts"></script>
      </section>
    </main>
  </Container>
</Layout>
